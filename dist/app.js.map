{"version":3,"file":"app.js","mappings":"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AAG,CAAC;AACpC,aAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC;AACpC,aAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC;AACpC,aAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC;AACpC,aAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC;AACpC,aAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC;AACpC,aAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC;AACpC,aAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC;AACpC,aAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC;AACpC,aAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC;AACpC,aAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC;AACpC,aAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC;AACpC,aAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC;;;;;;;UC1BjD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://ahogado-proyecto/./ts-module/app.ts","webpack://ahogado-proyecto/./ts-module/keyboardData.ts","webpack://ahogado-proyecto/webpack/bootstrap","webpack://ahogado-proyecto/webpack/before-startup","webpack://ahogado-proyecto/webpack/startup","webpack://ahogado-proyecto/webpack/after-startup"],"sourcesContent":["\r\n//! Importe de las variables \"key\" (Para el teclado virtual).\r\nimport * as keyboardData from \"./keyboardData\";\r\n\r\n//! DeclaraciÃ³n global de la interfaz String\r\ndeclare global {\r\n    interface String {\r\n        indicesOf(character: string): number[];\r\n    }\r\n}\r\n\r\nlet localStorageValue = localStorage.getItem(\"Input Value\");\r\n\r\nlet playerOneWord: string[] = [];\r\nlet playerTwoWord: string[] = [];\r\nlet playerOneLetters: string[] = [];\r\nlet playerTwoLetters: string[] = [];\r\n\r\nif (localStorageValue !== null) {\r\n    //! Palabra completa que adivinar\r\n    playerOneWord = localStorageValue.split(\"\");\r\n    //! Letras necesarias para adivinar la palabra\r\n    playerOneLetters = localStorageValue.split(\"\").filter((value, index, self) => self.indexOf(value) === index);\r\n}\r\n\r\nconsole.log(\"Player One Word:\", playerOneWord); // [\"tele\"]\r\nconsole.log(\"Player One Letters:\", playerOneLetters); // [\"t\", \"e\", \"l\"]\r\n// console.log(\"Player Two Word:\", playerTwoWord); // []\r\n// console.log(\"Player Two Letters:\", playerTwoLetters); // []\r\n\r\n//! Metodo para saber cuantas casillas ocupa la palabra.\r\nlet lenghtPlayerOneWord = playerOneWord.length\r\nlet lenghtPlayerTwoWord = playerTwoWord.length\r\n// console.log(lenghtPlayerOneWord);\r\n// console.log(lenghtPlayerTwoWord);\r\n\r\n//! Ciclo para crear las casillas (underscore) con los digitos de la palabra.\r\nfor (let underScore = 0; underScore < lenghtPlayerOneWord; underScore++) {\r\n    if (document.getElementById(\"divPlace\") !== null) {\r\n        document.getElementById(\"divPlace\")!.innerHTML += `<h5 id='removeElement${underScore}'> .__. </h5>`;\r\n    }}\r\n\r\n//! Contador para acumular cuantas veces se puede equivocar el jugador     \r\nlet contador = 0;\r\n\r\n//! Funcion para crear las consecuencias de una letra correcta o invalida.\r\nfunction verifyLetterFunction (value:string) {\r\n\r\n        //! Funcion para verificar si la letra puesta por el jugador, es correcta o invalida.\r\n             function booleanLetter(letra: string, array: string[]): boolean {\r\n                for (let elemento of array) {\r\n                if (elemento === letra) {\r\n                    return true; }}\r\n                return false; }\r\n        \r\n        //! Funcion creada para remplazar las casillas vacias (underscore) por las letras acertadas.\r\n        if (booleanLetter(value, playerOneLetters)) {\r\n            console.log(value);\r\n            \r\n            interface String {\r\n                indicesOf(character: string): number[];\r\n            }\r\n            \r\n            String.prototype.indicesOf = function(character: string): number[] {\r\n                const indices: number[] = [];\r\n                for (let i = 0; i < this.length; i++) {\r\n                    if (this.charAt(i) === character) {\r\n                        indices.push(i);\r\n                    }\r\n                }\r\n                return indices;\r\n            };\r\n                const correctWord: string|null = localStorageValue\r\n                if (correctWord !== null) {\r\n                    console.log(correctWord.indicesOf(`${value}`));\r\n                }\r\n               \r\n        } else \r\n        \r\n            {\r\n            //! Funcion creada para contar las veces que se equivoca el jugador, por cada equivocacion se refresca la pagina cambiando el dibujo del ahorcado.    \r\n            function addConter():any {\r\n                console.log(value);\r\n                \r\n                contador++;\r\n                if (contador < 6) {  \r\n                    switch (contador) {\r\n                        case 1:\r\n                            if (document.getElementById(\"newStep\") !== null) {\r\n                                document.getElementById(\"removeStep\")?.remove()\r\n                                document.getElementById(\"newStep\")!.innerHTML += `<img src=\"./src/step 0.png\" class=\"stepsStyle\" id=\"removeStep\" >` }\r\n                        break;\r\n\r\n                        case 2:\r\n                            if (document.getElementById(\"newStep\") !== null) {\r\n                                document.getElementById(\"removeStep\")?.remove()\r\n                                document.getElementById(\"newStep\")!.innerHTML += `<img src=\"./src/step 1.png\" class=\"stepsStyle\" id=\"removeStep\">` }\r\n                        break;\r\n\r\n                        case 3:\r\n                            if (document.getElementById(\"newStep\") !== null) {\r\n                                document.getElementById(\"removeStep\")?.remove()\r\n                                document.getElementById(\"newStep\")!.innerHTML += `<img src=\"./src/step 2.png\" class=\"stepsStyle\" id=\"removeStep\">` }\r\n                        break;\r\n\r\n                        case 4:\r\n                            if (document.getElementById(\"newStep\") !== null) {\r\n                                document.getElementById(\"removeStep\")?.remove()\r\n                                document.getElementById(\"newStep\")!.innerHTML += `<img src=\"./src/step 3.png\" class=\"stepsStyle\" id=\"removeStep\">` }\r\n                        break;\r\n\r\n                        case 5:\r\n                            if (document.getElementById(\"newStep\") !== null) {\r\n                                document.getElementById(\"removeStep\")?.remove()\r\n                                document.getElementById(\"newStep\")!.innerHTML += `<img src=\"./src/step 4.png\" class=\"stepsStyle\" id=\"removeStep\">` }\r\n                        break;}} \r\n\r\n                else {\r\n                    if (document.getElementById(\"newStep\") !== null) {\r\n                        document.getElementById(\"removeStep\")?.remove()\r\n                        document.getElementById(\"newStep\")!.innerHTML += `<img src=\"./src/step 5.png\" class=\"stepsStyle\" id=\"removeStep\">`}\r\n            }} addConter()}\r\n}\r\n                \r\n//! Funcion para chequear si el jugador puso las letras necesarias para completar la palabra.\r\nfunction checkForWin () {  \r\n            if (playerOneLetters.toString() === playerTwoLetters.toString()) {\r\n                alert(\"WIN\"); }}\r\n\r\n\r\n//! Interfaz para describir la estructura de keyboardData\r\ninterface KeyboardData {\r\n    [key: string]: HTMLElement;\r\n}\r\n\r\nconst keyboardDataTyped = keyboardData as KeyboardData;\r\n\r\n//! FunciÃ³n auxiliar para acceder a las propiedades de keyboardData\r\nfunction getKey(keyBucle: number): HTMLElement | undefined {\r\n    const keyName = `key${keyBucle}`;\r\n    return keyboardDataTyped[keyName];}\r\n\r\n//! Bucle para agregar los controladores de eventos\r\nfor (let keyBucle = 1; keyBucle < 27; keyBucle++) {\r\n    const key = getKey(keyBucle);\r\n    if (key) {\r\n        key.addEventListener(\"click\", (event) => {\r\n            // console.log(key);\r\n            const letter = key.innerHTML\r\n            playerTwoLetters.push(letter); // Agregamos la constante `letter` al array `playerTwoWord` \r\n            verifyLetterFunction(letter)\r\n            checkForWin() });}}\r\n\r\n \r\n            \r\n\r\n\r\n","//! Exportacion de constantes donde cada letra es su igual en orden QWERTY y se le vincula un nodo en el DOM\r\nexport const key1 = document.getElementById(\"Q\")\r\nexport const key2 = document.getElementById(\"W\")\r\nexport const key3 = document.getElementById(\"E\")\r\nexport const key4 = document.getElementById(\"R\")\r\nexport const key5 = document.getElementById(\"T\")\r\nexport const key6 = document.getElementById(\"Y\")\r\nexport const key7 = document.getElementById(\"U\")\r\nexport const key8 = document.getElementById(\"I\")\r\nexport const key9 = document.getElementById(\"O\")\r\nexport const key10 = document.getElementById(\"P\")\r\nexport const key11 = document.getElementById(\"A\")\r\nexport const key12 = document.getElementById(\"S\")\r\nexport const key13 = document.getElementById(\"D\")\r\nexport const key14 = document.getElementById(\"F\")\r\nexport const key15 = document.getElementById(\"G\")\r\nexport const key16 = document.getElementById(\"H\")\r\nexport const key17 = document.getElementById(\"J\")\r\nexport const key18 = document.getElementById(\"K\")\r\nexport const key19 = document.getElementById(\"L\")\r\nexport const key20 = document.getElementById(\"Z\")\r\nexport const key21 = document.getElementById(\"X\")\r\nexport const key22 = document.getElementById(\"C\")\r\nexport const key23 = document.getElementById(\"V\")\r\nexport const key24 = document.getElementById(\"B\")\r\nexport const key25 = document.getElementById(\"N\")\r\nexport const key26 = document.getElementById(\"M\")\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./ts-module/app.ts\");\n",""],"names":[],"sourceRoot":""}