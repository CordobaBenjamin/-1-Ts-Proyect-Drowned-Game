{"version":3,"file":"app.js","mappings":"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","sources":["webpack://ahogado-proyecto/./ts-module/app.ts","webpack://ahogado-proyecto/./ts-module/keyboardData.ts","webpack://ahogado-proyecto/webpack/bootstrap","webpack://ahogado-proyecto/webpack/before-startup","webpack://ahogado-proyecto/webpack/startup","webpack://ahogado-proyecto/webpack/after-startup"],"sourcesContent":["\r\n//! Importe de las variables \"key\" (Para el teclado virtual).\r\nimport * as keyboardData from \"./keyboardData\";\r\n\r\n//! DeclaraciÃ³n global de la interfaz String\r\ndeclare global {\r\n    interface String {\r\n        indicesOf(character: string): number[]; }\r\n};\r\n\r\n//! Constante que recupera el valor de local storage. subido en el archivo './ts-module/correctWord-Function.ts'\r\nconst localStorageValue = localStorage.getItem(\"Input Value\");\r\n\r\n//! Arrays de String que almacenan tanto las palabras del jugador 1 y 2, como las letras necesarias para formar estas.\r\nlet playerOneWord: string[] = [];\r\nlet playerTwoWord: string[] = [];\r\nlet playerOneLetters: string[] = [];\r\nlet playerTwoLetters: string[] = [];\r\n\r\nif (localStorageValue !== null) {\r\n    //! Palabra completa que adivinar\r\n    playerOneWord = localStorageValue.split(\"\");\r\n    //! Letras necesarias para adivinar la palabra\r\n    playerOneLetters = localStorageValue.split(\"\").filter((value, index, self) => self.indexOf(value) === index);\r\n}\r\n\r\n//! Metodo para saber cuantas casillas ocupa la palabra.\r\nlet lenghtPlayerOneWord = playerOneWord.length\r\nlet lenghtPlayerTwoWord = playerTwoWord.length\r\n\r\n\r\n//! Ciclo para crear las casillas (underscore) con los digitos de la palabra.\r\nfor (let underScore = 0; underScore < lenghtPlayerOneWord; underScore++) {\r\n    if (document.getElementById(\"divPlace\") !== null) {\r\n        document.getElementById(\"divPlace\")!.innerHTML += `<h5 id='replaceElement${underScore}'> ._. </h5>`;\r\n    }\r\n}\r\n\r\n//! Contador para acumular cuantas veces se puede equivocar el jugador.     \r\nlet contador = 0;\r\n\r\n//! Funcion para crear las consecuencias de una letra correcta o invalida.\r\nfunction verifyLetterFunction(value: string) {\r\n\r\n     //! Funcion para verificar si la letra puesta por el jugador, es correcta o invalida.\r\n        function booleanLetter(letra: string, array: string[]): boolean {\r\n            for (let elemento of array) {\r\n            if (elemento === letra) {\r\n            return true; }} return false; }\r\n\r\n    //! Funcion creada para remplazar las casillas vacias (underscore) por las letras acertadas. En el caso que el jugador no acierte la letra, leer linea 77 (else)\r\n    if (booleanLetter(value, playerOneLetters)) {\r\n        //! Interfaz que indica que \"indicesOf\" acepta como valor un string, devuelve un numero y este se transforma en string.\r\n        interface String {\r\n            indicesOf(character: string): number[]; \r\n        };\r\n        //! Funcion que permite saber el orden en el cual van las letras de la palabra correcta\r\n        String.prototype.indicesOf = function (character: string): number[] {\r\n            const indices: number[] = [];\r\n            for (let i = 0; i < this.length; i++) {\r\n                if (this.charAt(i) === character) {\r\n                    indices.push(i); }} return indices;\r\n        };\r\n\r\n        //! Ciclo que crea las casillas.\r\n        if (localStorageValue !== null) {\r\n            //! Se le aplica la funcion indicesOf creada anteriormente, a la constante traido del Local Storage declarada anteriormente.\r\n            const indices = localStorageValue.indicesOf(value);\r\n                //! Se utiliza el metodo forEach para cambiar la casilla vacia, por la letra correcta, segun el orden al que le corresponda.\r\n                indices.forEach(index =>  {\r\n                    const replaceId = `replaceElement${index}`;\r\n                    const letterToRePlace = document.getElementById(replaceId);\r\n                    if (letterToRePlace !== null) {\r\n                        letterToRePlace!.innerHTML = `<h5>${value}<h5>`;\r\n        }})};\r\n\r\n    //! Si el jugador, no acerto la letra segun el numero de errores, se va armando el StickMan con un maximo de 6 intentos.\r\n    } else {\r\n\r\n        //! Funcion creada para contar las veces que se equivoca el jugador, por cada equivocacion se refresca la pagina cambiando el dibujo del ahorcado.    \r\n        function addConter(): any {\r\n            contador++;\r\n            //! Mientras el contador sea menor de 6, el jugador va a poder seguir probando letras. cada ves que la letra sea incorrecta se ira armando cada ves mas el StickMan.\r\n            if (contador < 6) {\r\n                //! En cada caso que el jugador se haya equivocado cambiara la imagen del StickMan segun el numero de veces equivocado.\r\n                switch (contador) {\r\n                    case 1:\r\n                        if (document.getElementById(\"newStep\") !== null) {\r\n                            document.getElementById(\"newStep\")!.innerHTML = `<img src=\"./src/step 0.png\" class=\"stepsStyle\" id=\"removeStep\" >`\r\n                        }\r\n                        break;\r\n\r\n                    case 2:\r\n                        if (document.getElementById(\"newStep\") !== null) {\r\n                            document.getElementById(\"newStep\")!.innerHTML = `<img src=\"./src/step 1.png\" class=\"stepsStyle\" id=\"removeStep\">`\r\n                        }\r\n                        break;\r\n\r\n                    case 3:\r\n                        if (document.getElementById(\"newStep\") !== null) {\r\n                            document.getElementById(\"newStep\")!.innerHTML = `<img src=\"./src/step 2.png\" class=\"stepsStyle\" id=\"removeStep\">`\r\n                        }\r\n                        break;\r\n\r\n                    case 4:\r\n                        if (document.getElementById(\"newStep\") !== null) {\r\n                            document.getElementById(\"newStep\")!.innerHTML = `<img src=\"./src/step 3.png\" class=\"stepsStyle\" id=\"removeStep\">`\r\n                        }\r\n                        break;\r\n\r\n                    case 5:\r\n                        if (document.getElementById(\"newStep\") !== null) {\r\n                            document.getElementById(\"newStep\")!.innerHTML = `<img src=\"./src/step 4.png\" class=\"stepsStyle\" id=\"removeStep\">`\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n\r\n            //! Si el jugador tiene 6 intentos fallidos, cambiara el StickMan a uno muerto, y el titulo cambiara a \"Perdiste\"\r\n            else {\r\n                if (document.getElementById(\"newStep\") !== null) {\r\n                    document.getElementById(\"removeStep\")?.remove()\r\n                    document.getElementById(\"newStep\")!.innerHTML += `<img src=\"./src/step 5.png\" class=\"stepsStyle\" id=\"removeStep\">`\r\n                }\r\n                const winOrLoseTittleElement = document.getElementById(\"winOrLoseTittle\");\r\n                if (winOrLoseTittleElement !== null) {\r\n\r\n                    winOrLoseTittleElement.className = \"tittleLose\"\r\n                    winOrLoseTittleElement.innerHTML = \"!PERDISTE!\";\r\n                }\r\n                \r\n            }   \r\n          //! Se invoca a la funcion cada ves que el jugador no acierta le letra.  \r\n        } addConter()\r\n    }\r\n}\r\n\r\n//! Funcion para chequear si el jugador puso las letras necesarias para completar la palabra.\r\nfunction checkForWin() {\r\n    console.log(playerTwoLetters);\r\n    \r\n    let contieneTodasLasLetras = true;\r\n\r\n    //! Verificar si todas las letras de playerOneLetters estÃ¡n en playerTwoLetters\r\n    playerOneLetters.forEach(letter => {\r\n        if (playerTwoLetters.indexOf(letter) === -1) {\r\n            contieneTodasLasLetras = false;\r\n            return; //! Salir del bucle forEach si encontramos una letra que falta\r\n        }\r\n    });\r\n\r\n    if (contieneTodasLasLetras) {\r\n        const winOrLoseTittleElement = document.getElementById(\"winOrLoseTittle\");\r\n        if (winOrLoseTittleElement !== null) {\r\n            winOrLoseTittleElement.className = \"tittleWin\";\r\n            winOrLoseTittleElement.innerHTML = \"!GANASTE!\";\r\n        }\r\n    }\r\n}\r\n\r\n//! Interfaz para describir la estructura de keyboardData\r\ninterface KeyboardData {\r\n    [key: string]: HTMLElement;\r\n}\r\n\r\nconst keyboardDataTyped = keyboardData as KeyboardData;\r\n\r\n//! FunciÃ³n auxiliar para acceder a las propiedades de keyboardData\r\nfunction getKey(keyBucle: number): HTMLElement | undefined {\r\n    const keyName = `key${keyBucle}`;\r\n    return keyboardDataTyped[keyName];\r\n}\r\n\r\n//! Bucle para poder utiliar un Evento OnClick sin necesidad de escribir uno por cada letra.\r\nfor (let keyBucle = 1; keyBucle < 27; keyBucle++) {\r\n    const key = getKey(keyBucle);\r\n    if (key) {\r\n        key.addEventListener(\"click\", (event) => {\r\n\r\n            //! Recupera la letra del HTML\r\n            const letter = key.innerHTML\r\n\r\n            //! Se le aÃ±ade la letra al array \"playerTwoLetters\" para que la funcion \"checkForWin\" pueda verificar si el jugador gano.\r\n            playerTwoLetters.push(letter);\r\n            //! Ejecuta la funcion \"verifyLetterFunction\" la cual crea las consecuencias sobre si la letra es correcta o invalida\r\n            verifyLetterFunction(letter)\r\n            //! Ejecuta la funcion \"checkForWin\" verificando si el jugador, ya completo las letras necesarias para ganar.\r\n            checkForWin()\r\n        });\r\n    }\r\n}\r\n\r\n\r\n//! FunciÃ³n que ejectua lo mismo que OnClick pero cambiando el evento por un KeyPress.\r\nfunction letterToArray(letter: string) {\r\n    playerTwoLetters.push(letter); \r\n    verifyLetterFunction(letter)\r\n    checkForWin()\r\n}\r\n\r\n//! Recupera la letra que se presiona, y se activa la funcion \"letterToArray\" con el valor de la letra\r\ndocument.addEventListener(\"keypress\", (event) => {\r\n    let keyPushLowerCase = event.key; \r\n    let keyPushUpperCase = keyPushLowerCase.toUpperCase()\r\n    letterToArray(keyPushUpperCase); \r\n});\r\n\r\n\r\n\r\n\r\n\r\n","//! Exportacion de constantes donde cada letra es su igual en orden QWERTY y se le vincula un nodo en el DOM\r\nexport const key1 = document.getElementById(\"Q\")\r\nexport const key2 = document.getElementById(\"W\")\r\nexport const key3 = document.getElementById(\"E\")\r\nexport const key4 = document.getElementById(\"R\")\r\nexport const key5 = document.getElementById(\"T\")\r\nexport const key6 = document.getElementById(\"Y\")\r\nexport const key7 = document.getElementById(\"U\")\r\nexport const key8 = document.getElementById(\"I\")\r\nexport const key9 = document.getElementById(\"O\")\r\nexport const key10 = document.getElementById(\"P\")\r\nexport const key11 = document.getElementById(\"A\")\r\nexport const key12 = document.getElementById(\"S\")\r\nexport const key13 = document.getElementById(\"D\")\r\nexport const key14 = document.getElementById(\"F\")\r\nexport const key15 = document.getElementById(\"G\")\r\nexport const key16 = document.getElementById(\"H\")\r\nexport const key17 = document.getElementById(\"J\")\r\nexport const key18 = document.getElementById(\"K\")\r\nexport const key19 = document.getElementById(\"L\")\r\nexport const key20 = document.getElementById(\"Z\")\r\nexport const key21 = document.getElementById(\"X\")\r\nexport const key22 = document.getElementById(\"C\")\r\nexport const key23 = document.getElementById(\"V\")\r\nexport const key24 = document.getElementById(\"B\")\r\nexport const key25 = document.getElementById(\"N\")\r\nexport const key26 = document.getElementById(\"M\")\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./ts-module/app.ts\");\n",""],"names":[],"sourceRoot":""}